@startuml citadelle_states

[*] --> SelectionPhase

state SelectionPhase {
    [*] --> PickACard

    PickACard: currentPlayer: u32
    PickACard --> PickACard: next player
    PickACard --> [*]

    SelectionPhase --> BuildingPhase
}

state BuildingPhase {
    [*] --> Playing

    BuildingPhase --> EndGame: if there is a winner
    BuildingPhase --> SelectionPhase

    Playing --> Playing: next player
    Playing --> [*]

    state Playing {
        Playing: currentPlayer: u32
        Playing: hasBuilt: bool
        Playing: hasDrawn: bool
        Playing: hasPickedCoins: bool
        Playing: usedPowers: [string]

        ' Possible sequences:
        ' - card
        ' - card -> building
        ' - card -> building -> power
        ' - card -> power
        ' - coins
        ' - coins -> building
        ' - coins -> building -> power
        ' - coins -> power -> building
        ' - power -> card
        ' - power -> card -> building
        ' - power -> coins
        ' - power -> coins -> building

        [*] --> UsedPower
        [*] --> PickedCoins
        [*] --> DrewCard

        UsedPower --> DrewCard: if !hasDrawn
        UsedPower --> PickedCoins: if !hasPickedCoins
        UsedPower --> FinishedPlaying

        PickedCoins --> Build: if !hasBuilt
        PickedCoins --> UsedPower: if power_allowed(usedPowers)
        PickedCoins --> FinishedPlaying

        DrewCard --> Build: if !hasBuilt
        DrewCard --> UsedPower: if power_allowed(usedPowers)
        DrewCard --> FinishedPlaying

        Build --> UsedPower: if power_allowed(usedPowers)
        Build --> FinishedPlaying

        FinishedPlaying --> [*]
    }
}

state EndGame {
}

@enduml